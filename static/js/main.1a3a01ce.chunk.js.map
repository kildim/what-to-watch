{"version":3,"sources":["const.ts","components/page-404/page-404.tsx","components/small-film-card/small-film-card.tsx","components/catalog-films-list/catalog-films-list.tsx","components/footer/footer.tsx","store/root-reducer.ts","store/action.ts","store/reducers/auth-reducer/auth-reducer.ts","store/reducers/status-reducer/status-reducer.ts","store/reducers/data-reducer/data-reducer.ts","utils/utils.tsx","store/reducers/data-reducer/selectors.ts","components/catalog-genres-list/catalog-genres-list.tsx","components/show-button/show-button.tsx","services/token.ts","components/loading-screen/loading-screen.tsx","store/reducers/auth-reducer/selectors.ts","components/user-block/user-block.tsx","store/api-actions.ts","components/main/main-header.tsx","components/play-film/play-film.tsx","components/add-my-list/add-my-list.tsx","components/main/main-promo.tsx","components/main/main.tsx","components/sign-in/sign-in.tsx","components/private-route/private-route.tsx","store/reducers/status-reducer/selectors.ts","components/review-form/review-star.tsx","components/review-form/review-form.tsx","components/review/review.tsx","components/my-list/my-list.tsx","components/player/player.tsx","components/overview-tab/overview-tab.tsx","components/details-tab/details-tab.tsx","components/comment/comment.tsx","components/reviews-tab/reviews-tab.tsx","components/film-card-tabs/film-card-tabs.tsx","components/film/film-card.tsx","components/film/film.tsx","browser-history.ts","components/app/app.tsx","services/api.ts","store/middlewares/redirect.ts","index.tsx"],"names":["AppRoute","APIRoute","AuthorizationStatus","Action","ALL_GENRES_ITEM","ToastMessage","Page404","to","SmallFilmCard","film","useState","isPlaying","setIsPlaying","history","useHistory","videoRef","useRef","useEffect","timeout","setTimeout","current","play","video","videoSrc","src","stopPlay","clearTimeout","filmPath","generatePath","Film","id","className","onMouseEnter","onMouseLeave","onClick","push","poster","previewImage","previewVideoLink","ref","preload","loop","muted","name","CatalogFilmsList","props","films","map","Footer","NameSpace","Main","setGenre","createAction","SetGenre","genre","type","payload","loadFilms","LoadFilms","loadFavorites","LoadFavorites","loadUserInfo","LoadUserInfo","userInfo","setGenres","SetGenres","genres","loadPromo","LoadPromo","promo","loadFilmComments","LoadFilmComments","comments","loadSimilarFilms","LoadSimilarFilms","similarFilms","setIsFilmsDataLoading","SetIsFilmsDataLoading","isFilmsDataLoading","setIsFavoritesLoading","SetIsFavoritesLoading","isFavoritesLoading","setIsReviewPosting","SetIsReviewPosting","isReviewPosting","setAuthorizationStatus","SetAuthorizationStatus","authStatus","redirectToRoute","RedirectToRoute","url","initialState","authorizationStatus","Unknown","authReducer","createReducer","builder","addCase","state","action","statusReducer","favorites","dataReducer","rootReducer","combineReducers","Auth","Data","Status","dayjs","extend","duration","getGenres","Set","slice","GENRES_NUMBER","parseFilmFromServerFormat","Number","posterImage","backgroundImage","backgroundColor","videoLink","description","rating","scoresCount","director","starring","runTime","released","isFavorite","parseAuthInfoFromServerFormat","AuthInfo","email","avatarUrl","token","rangeFilm","convertMinutesToHoursWithMinutes","minutesDuration","hours","Math","floor","minutes","formatCommentDate","commentDate","format","getFilms","getGenre","getPromo","getSimilarFilms","getComments","getUserInfo","getFavorites","getFilmsByGenre","createSelector","ingoingArray","filter","constructLiClassName","currentGenre","classNames","CatalogGenresList","useSelector","dispatch","useDispatch","handleChangeGenre","event","preventDefault","genreName","currentTarget","textContent","listItems","href","ShowButton","onClickHandler","visibility","AUTH_TOKEN_KEY_NAME","saveToken","localStorage","setItem","SPINNER_STYLE","position","top","left","LoadingScreen","alt","style","getAuthStatus","UserBlock","width","height","MyList","_getState","api","a","delete","Logout","removeItem","NoAuth","SignIn","MainHeader","memo","PlayFilm","playerRoute","Player","viewBox","xlinkHref","AddMyList","isFavoriteFlag","getState","status","postFavorite","FavoriteStatus","post","responce","data","DATA","updatedFilms","movie","toast","MainPromo","console","log","promoFilm","listCount","setListCount","get","Promo","serverPromoData","promoData","filmsList","isShowButtonVisible","useMemo","length","count","VALID_PASSWORD_REGEXP","VALID_EMAIL_REGEXP","isValidPassword","password","test","isValidEmail","loginRef","passwordRef","onSubmit","evt","value","login","Login","userId","userEmail","userName","userAvatarUrl","userToken","info","loginAction","placeholder","htmlFor","autoComplete","PrivateRoute","exact","path","render","getIsFilmsDataLoading","getIsReviewPosting","getIsFavoritesLoading","ReviewStar","handleReviewStarClick","onChange","disabled","ReviewConfig","DEFAULT_RATING","Array","fill","ReviewForm","setRating","review","setReview","useParams","getRating","findIndex","ratingElement","target","indexOfChecked","member","memberIndex","starsInputs","_","index","inputValue","toString","ratingValue","String","comment","postCommentUrl","PostComment","filmUrl","then","postReview","Review","find","location","useLocation","pathname","Favorites","serverFavorites","favoritesData","videoElement","progressBarRef","progressBarElement","isVideoLoading","setIsVideoLoading","currentTime","setCurrentTime","remainingTime","setDuration","pause","videoDuration","round","undefined","RemainingMovieTime","remaining","formatRemainingTime","onLoadedData","onTimeUpdate","currentVideoTime","currentPercentage","currentRemainingTime","go","max","prevState","requestFullscreen","OverviewTab","join","STARRING_STYLE","whiteSpace","DetailsTab","prop","REVIEW_TEXT_STYLE","wordBreak","Comment","Date","date","user","dateTime","toISOString","FILM_CARD_REVIEWS_STYLE","paddingTop","display","gridTemplateColumns","gridAutoColumns","columnGap","ReviewsTab","Tab","FilmCardTabs","Overview","activeTab","setActiveTab","overviewNavLinkClass","detailsNavLinkClass","Details","reviewsNavLinkClass","Reviews","FilmCard","addReviewPath","AddReview","useRouteMatch","similarFilmsPath","Similar","commentsPath","Comments","serverFilmsData","filmsData","fetchSimilarFilmsAction","fetchFilmCommentsAction","FILM_CARD_INLINE_STYLE","browserHistory","createBrowserHistory","App","HttpCode","redirect","_store","next","onUnauthorized","axios","create","baseURL","interceptors","response","use","error","Unauthorized","Promise","reject","request","config","getItem","getToken","headers","createAPI","store","configureStore","reducer","middleware","getDefaultMiddleware","thunk","extraArgument","concat","serverAuthInfo","Films","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a3a01ce.chunk.js","sourcesContent":["export enum AppRoute {\n  SignIn = '/login',\n  Main = '/',\n  Film = '/films/:id',\n  MyList = '/my-list',\n  Player = '/player/:id',\n  Favorites = '/favorites',\n  Overview = '/films/:id/overview',\n  Reviews = '/films/:id/reviews',\n  Details = '/films/:id/details',\n  Similar = '/films/:id/similar',\n  AddReview = '/films/:id/review',\n  Comments = '/comments/:id',\n  Page404 = '/page404',\n}\n\nexport enum APIRoute {\n  Films = '/films',\n  Login = '/login',\n  Logout = '/logout',\n  Promo = '/promo',\n  PostComment = '/comments/:id',\n  Favorites = '/favorite',\n  FavoriteStatus = '/favorite/:film_id/:status'\n}\n\nexport enum AuthorizationStatus {\n  Auth = 'AUTH',\n  NoAuth = 'NO_AUTH',\n  Unknown = 'UNKNOWN',\n}\n\nexport enum Action {\n  SetGenre = 'genre/setGenre',\n  SetGenres = 'genre/setGenres',\n\n  SetApi = 'data/setApi',\n  LoadFilms = 'data/loadFilms',\n  LoadPromo = 'data/loadPromo',\n  LoadFilmComments = 'data/loadFilmComments',\n  LoadSimilarFilms = 'data/loadSimilarFilms',\n  LoadFavorites = 'data/loadFavorites',\n  RedirectToRoute = 'data/redirectToRoute',\n  SetIsFavoritesLoading = 'data/setIsFavoritesLoading',\n  SetIsFilmsDataLoading = 'data/setIsFilmsDataLoading',\n  SetIsReviewPosting = 'data/isReviewPosting',\n  LoadUserInfo = 'data/loadUserInfo',\n\n  SetAuthorizationStatus = 'user/setAuthorizationStatus',\n}\n\nexport const ALL_GENRES_ITEM = 'All genres';\nexport const GENRES_NUMBER = 9;\n\nexport const ToastMessage = {\n  AuthSuggestion: 'Предлагаем Авторизоваться',\n  PostError: 'Ошибка при публикации на сервере',\n  FetchFilmsError: 'Возникла ошибка при загрузке фильмов',\n  FetchFavoritesErrorMessage: 'Возникла ошибка при загрузке избранных фильмов',\n  FetchSimilarErrorMessage: 'Возникла ошибка при загрузке похожих фильмов',\n  FetchCommentsErrorMessage: 'Возникла ошибка при загрузке комментариев',\n  PostLoginActionErrorMessage: 'Возникла ошибка при отправке параметров аутентификации',\n  PostSetFavoriteErrorMessage: 'Возникла ошибка при внесении в список избранного',\n} as const;\n","import {Fragment} from 'react';\nimport {Link} from 'react-router-dom';\n\nfunction Page404(): JSX.Element {\n  return (\n    <Fragment>\n      <h1>server respond 404</h1>\n      <p>Can&apos;t find the page</p>\n      <Link to=\"/\">GO to the Home page</Link>\n    </Fragment>\n  );\n}\n\nexport default Page404;\n","import { generatePath, Link, useHistory } from 'react-router-dom';\nimport { FilmType } from '../../types/types';\nimport { useEffect, useRef, useState } from 'react';\nimport { AppRoute } from '../../const';\nimport Page404 from '../page-404/page-404';\n\ntype SmallFilmСardProps = {\n  film: FilmType;\n};\n\nfunction SmallFilmCard({ film }: SmallFilmСardProps): JSX.Element {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const history = useHistory();\n  const videoRef = useRef<HTMLVideoElement | null>(null);\n\n  const handleMouseEnter = () => {\n    setIsPlaying(true);\n  };\n\n  const handleMouseLeave = () => {\n    setIsPlaying(false);\n  };\n\n  const handleClick = () => {\n    history.push(filmPath);\n  };\n\n  const stopPlay = (video: HTMLVideoElement | null): void => {\n    if (video) {\n      const videoSrc = video.src;\n      video.src = videoSrc;\n    }\n  };\n\n  useEffect(() => {\n    let timeout: ReturnType<typeof setTimeout>;\n    if (isPlaying) {\n      timeout = setTimeout(() => videoRef.current?.play(), 1000);\n    } else {\n      stopPlay(videoRef.current);\n    }\n    return () => {\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n    };\n  }, [isPlaying]);\n\n  if (!film) {\n    return <Page404 />;\n  }\n  const filmPath = generatePath(AppRoute.Film, { id: film.id });\n\n  return (\n    <article\n      className=\"small-film-card catalog__films-card\"\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      onClick={handleClick}\n    >\n      <div className=\"small-film-card__image\">\n        <video\n          poster={film.previewImage}\n          src={film.previewVideoLink}\n          ref={videoRef}\n          preload=\"none\"\n          loop\n          muted\n        />\n      </div>\n      <h3 className=\"small-film-card__title\">\n        <Link className=\"small-film-card__link\" to={filmPath}>\n          {film.name}\n        </Link>\n      </h3>\n    </article>\n  );\n}\n\nexport default SmallFilmCard;\n","import {FilmType} from '../../types/types';\nimport SmallFilmCard from '../small-film-card/small-film-card';\n\ntype CatalogFilmsListProps = {\n  films: FilmType[];\n}\n\nfunction CatalogFilmsList(props: CatalogFilmsListProps): JSX.Element {\n  const {films} = props;\n\n  return (\n    <div className=\"catalog__films-list\">\n      {films.map((film: FilmType) => (\n        <SmallFilmCard key={film?.id} film={film}/>\n      ))}\n    </div>\n  );\n}\n\nexport default CatalogFilmsList;\n","import { Link } from 'react-router-dom';\n\nimport { AppRoute } from '../../const';\n\nfunction Footer(): JSX.Element {\n  return (\n    <footer className=\"page-footer\">\n      <div className=\"logo\">\n        <Link to={AppRoute.Main} className=\"logo__link logo__link--light\">\n          <span className=\"logo__letter logo__letter--1\">W</span>\n          <span className=\"logo__letter logo__letter--2\">T</span>\n          <span className=\"logo__letter logo__letter--3\">W</span>\n        </Link>\n      </div>\n\n      <div className=\"copyright\">\n        <p>© 2019 What to watch Ltd.</p>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import {combineReducers} from '@reduxjs/toolkit';\nimport {authReducer} from './reducers/auth-reducer/auth-reducer';\nimport {statusReducer} from './reducers/status-reducer/status-reducer';\nimport {dataReducer} from './reducers/data-reducer/data-reducer';\n\nexport enum NameSpace {\n  Auth = 'AUTH',\n  Data = 'DATA',\n  Status = 'STATUS'\n}\n\nexport const rootReducer = combineReducers({\n  [NameSpace.Auth]: authReducer,\n  [NameSpace.Data]: dataReducer,\n  [NameSpace.Status]: statusReducer,\n});\n\nexport type RootReducerType = ReturnType<typeof rootReducer>;\n","import { CommentType, FilmType, UserInfoType } from '../types/types';\nimport {Action, AuthorizationStatus} from '../const';\nimport { GenreType } from '../types/state';\nimport {createAction} from '@reduxjs/toolkit';\n\nexport const setGenre = createAction(\n  Action.SetGenre, (genre: string) =>\n    ({\n      type: Action.SetGenre,\n      payload: genre,\n    }),\n);\n\nexport const loadFilms = createAction(\n  Action.LoadFilms, (films: FilmType[]) => ({\n    type: Action.LoadFilms,\n    payload: {\n      films: films,\n    },\n  }),\n);\n\nexport const loadFavorites = createAction(\n  Action.LoadFavorites, (films: FilmType[]) => ({\n    type: Action.LoadFavorites,\n    payload: films,\n  }),\n);\n\nexport const loadUserInfo = createAction(\n  Action.LoadUserInfo, (userInfo: UserInfoType) => ({\n    type: Action.LoadUserInfo,\n    payload: userInfo,\n  }),\n);\n\nexport const setGenres = createAction(\n  Action.SetGenres, (genres: GenreType[]) => ({\n    type: Action.SetGenres,\n    payload: {\n      genres: genres,\n    },\n  }),\n);\n\nexport const loadPromo = createAction(\n  Action.LoadPromo, (promo: FilmType) => ({\n    type: Action.LoadPromo,\n    payload: {\n      promo: promo,\n    },\n  }),\n);\n\nexport const loadFilmComments = createAction(\n  Action.LoadFilmComments, (comments: CommentType[]) => ({\n    type: Action.LoadFilmComments,\n    payload: comments,\n  }),\n);\n\nexport const loadSimilarFilms = createAction(\n  Action.LoadSimilarFilms, (films: FilmType[]) => ({\n    type: Action.LoadSimilarFilms,\n    payload: {\n      similarFilms: films,\n    },\n  }),\n);\n\nexport const setIsFilmsDataLoading = createAction(\n  Action.SetIsFilmsDataLoading, (isFilmsDataLoading: boolean) => ({\n    type: Action.SetIsFilmsDataLoading,\n    payload: isFilmsDataLoading,\n  }),\n);\n\nexport const setIsFavoritesLoading = createAction(\n  Action.SetIsFavoritesLoading, (isFavoritesLoading: boolean) => ({\n    type: Action.SetIsFavoritesLoading,\n    payload: isFavoritesLoading,\n  }),\n);\n\nexport const setIsReviewPosting = createAction(\n  Action.SetIsReviewPosting, (isReviewPosting: boolean) => ({\n    type: Action.SetIsReviewPosting,\n    payload: isReviewPosting,\n  }),\n);\n\nexport const setAuthorizationStatus = createAction(\n  Action.SetAuthorizationStatus, (authStatus: AuthorizationStatus) => ({\n    type: Action.SetAuthorizationStatus,\n    payload: authStatus,\n  }),\n);\n\nexport const redirectToRoute = createAction(\n  Action.RedirectToRoute, (url: string) => ({\n    type: Action.RedirectToRoute,\n    payload: url,\n  }),\n);\n","import {AuthorizationStatus} from '../../../const';\nimport {AuthReducerType} from '../../../types/state';\nimport {createReducer} from '@reduxjs/toolkit';\nimport {setAuthorizationStatus} from '../../action';\n\nconst initialState: AuthReducerType = {\n  authorizationStatus: AuthorizationStatus.Unknown,\n};\n\nconst authReducer = createReducer(initialState, (builder) => {\n  builder\n    .addCase(setAuthorizationStatus, (state, action) => {\n      state.authorizationStatus = action.payload;\n    });\n});\n\nexport {authReducer};\n","import { createReducer } from '@reduxjs/toolkit';\nimport { StatusReducerType } from '../../../types/state';\nimport {\n  setIsFavoritesLoading,\n  setIsFilmsDataLoading,\n  setIsReviewPosting\n} from '../../action';\n\nconst initialState: StatusReducerType = {\n  isFilmsDataLoading: false,\n  isReviewPosting: false,\n  isFavoritesLoading: false,\n};\n\nconst statusReducer = createReducer(initialState, (builder) => {\n  builder\n    .addCase(setIsFilmsDataLoading, (state, action) => {\n      state.isFilmsDataLoading = action.payload;\n    })\n    .addCase(setIsReviewPosting, (state, action) => {\n      state.isReviewPosting = action.payload;\n    })\n    .addCase(setIsFavoritesLoading, (state, action) => {\n      state.isFavoritesLoading = action.payload;\n    });\n});\n\nexport { statusReducer };\n","import { createReducer } from '@reduxjs/toolkit';\nimport { DataReducerType } from '../../../types/state';\nimport { ALL_GENRES_ITEM } from '../../../const';\nimport {\n  loadFavorites,\n  loadPromo,\n  loadFilmComments,\n  loadFilms,\n  loadSimilarFilms,\n  loadUserInfo,\n  setGenre,\n  setGenres\n} from '../../action';\n\nconst initialState: DataReducerType = {\n  genre: ALL_GENRES_ITEM as string,\n  films: [],\n  genres: [ALL_GENRES_ITEM],\n  promo: null,\n  similarFilms: [],\n  comments: [],\n  userInfo: null,\n  favorites: [],\n};\n\nconst dataReducer = createReducer(initialState, (builder) => {\n  builder\n    .addCase(setGenre, (state, action) => {\n      state.genre = action.payload;\n    })\n    .addCase(loadFilms, (state, action) => {\n      state.films = action.payload.films;\n    })\n    .addCase(setGenres, (state, action) => {\n      state.genres = action.payload.genres;\n    })\n    .addCase(loadSimilarFilms, (state, action) => {\n      state.similarFilms = action.payload.similarFilms;\n    })\n    .addCase(loadPromo, (state, action) => {\n      state.promo= action.payload.promo;\n    })\n    .addCase(loadFavorites, (state, action) => {\n      state.favorites = action.payload;\n    })\n    .addCase(loadFilmComments, (state, action) => {\n      state.comments = action.payload;\n    })\n    .addCase(loadUserInfo, (state, action) => {\n      state.userInfo = action.payload;\n    });\n});\n\nexport { dataReducer };\n","import {\n  AuthInfoType,\n  FilmType,\n  ServerAuthInfoType,\n  ServerFilmType\n} from '../types/types';\nimport { GenreType } from '../types/state';\nimport { ALL_GENRES_ITEM, AuthorizationStatus, GENRES_NUMBER } from '../const';\nimport dayjs from 'dayjs';\nimport duration from 'dayjs/plugin/duration';\n\ndayjs.extend(duration);\n\nconst joinArrayByComma = (ingoingArray: string[]): string =>\n  ingoingArray.join(',\\n');\n\nconst filterFilmsByGenre = (\n  ingoingArray: FilmType[],\n  genre: string,\n): FilmType[] =>\n  ingoingArray.filter((film: FilmType) =>\n    genre === ALL_GENRES_ITEM ? true : film?.genre === genre,\n  );\n\nconst getGenres = (films: FilmType[]): GenreType[] => {\n  const genres = films.map((film) => film?.genre || '');\n  return [ALL_GENRES_ITEM as GenreType, ...new Set(genres)].slice(\n    0,\n    GENRES_NUMBER + 1,\n  );\n};\n\nconst isTrueString = (source: string): boolean => source === 'true';\n\nexport const isCheckedAuth = (\n  authorizationStatus: AuthorizationStatus,\n): boolean => authorizationStatus === AuthorizationStatus.Unknown;\n\nconst parseFilmFromServerFormat = (film: ServerFilmType): FilmType => ({\n  id: Number(film['id']),\n  name: film['name'],\n  posterImage: film['poster_image'],\n  previewImage: film['preview_image'],\n  backgroundImage: film['background_image'],\n  backgroundColor: film['background_color'],\n  videoLink: film['video_link'],\n  previewVideoLink: film['preview_video_link'],\n  description: film['description'],\n  rating: Number(film['rating']),\n  scoresCount: Number(film['scores_count']),\n  director: film['director'],\n  starring: film['starring'],\n  runTime: Number(film['run_time']),\n  genre: film['genre'],\n  released: film['released'],\n  isFavorite: film['is_favorite'],\n});\n\nconst parseAuthInfoFromServerFormat = (\n  AuthInfo: ServerAuthInfoType,\n): AuthInfoType => ({\n  id: AuthInfo.id,\n  email: AuthInfo.email,\n  name: AuthInfo.name,\n  avatarUrl: AuthInfo['avatar_url'],\n  token: AuthInfo.token,\n});\n\nconst rangeFilm = (rating: number): string => {\n  switch (true) {\n    case rating < 3:\n      return 'Bad';\n    case rating < 5:\n      return 'Normal';\n    case rating < 8:\n      return 'Good';\n    case rating < 10:\n      return 'Very good';\n    default:\n      return 'Awesome';\n  }\n};\n\nconst convertMinutesToHoursWithMinutes = (minutesDuration: number): string => {\n  const hours = Math.floor(minutesDuration / 60);\n  const minutes = minutesDuration - hours * 60;\n  return hours > 0 ? `${hours}h ${minutes}m` : `${minutes}m`;\n};\n\nconst formatCommentDate = (commentDate: Date): string =>\n  dayjs(commentDate).format('MMMM D, YYYY');\n\nconst formatRemainingTime = (remaining: number): string => {\n  const HOUR_IN_MS = 3600;\n  const format = remaining >= HOUR_IN_MS ? '-HH:mm:ss' : '-mm:ss';\n  return dayjs.duration(remaining, 'seconds').format(format);\n};\n\nexport {\n  joinArrayByComma,\n  filterFilmsByGenre,\n  getGenres,\n  isTrueString,\n  parseFilmFromServerFormat,\n  parseAuthInfoFromServerFormat,\n  rangeFilm,\n  convertMinutesToHoursWithMinutes,\n  formatCommentDate,\n  formatRemainingTime\n};\n","import { GenreType, StateType } from '../../../types/state';\nimport { NameSpace } from '../../root-reducer';\nimport { CommentType, FilmType, UserInfoType } from '../../../types/types';\nimport {createSelector} from 'reselect';\nimport {filterFilmsByGenre} from '../../../utils/utils';\n\nexport const getFilms = (state: StateType): FilmType[] =>\n  state[NameSpace.Data].films;\nexport const getGenre = (state: StateType): string =>\n  state[NameSpace.Data].genre;\nexport const getGenres = (state: StateType): GenreType[] =>\n  state[NameSpace.Data].genres;\nexport const getPromo = (state: StateType): FilmType =>\n  state[NameSpace.Data].promo;\nexport const getSimilarFilms = (state: StateType): FilmType[] =>\n  state[NameSpace.Data].similarFilms;\nexport const getComments = (state: StateType): CommentType[] =>\n  state[NameSpace.Data].comments;\nexport const getUserInfo = (state: StateType): UserInfoType =>\n  state[NameSpace.Data].userInfo;\nexport const getFavorites = (state: StateType): FilmType[] =>\n  state[NameSpace.Data].favorites;\nexport const getFilmsByGenre = createSelector(getFilms, getGenre, filterFilmsByGenre );\n","import {GenreType} from '../../types/state';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {setGenre} from '../../store/action';\nimport classNames from 'classnames';\nimport React, {MouseEvent} from 'react';\nimport {getGenre, getGenres} from '../../store/reducers/data-reducer/selectors';\n\nconst constructLiClassName = (genre: string, currentGenre: string): string =>\n  classNames('catalog__genres-item', {\n    'catalog__genres-item--active': genre === currentGenre,\n  });\n\nfunction CatalogGenresList(): JSX.Element {\n  const genres = useSelector(getGenres);\n  const genre = useSelector(getGenre);\n  const dispatch = useDispatch();\n\n  const handleChangeGenre = (event: MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    const target = event.currentTarget;\n    const genreName = target.textContent;\n    if (genreName) {\n      dispatch(setGenre(genreName));\n    }\n  };\n\n  if (!genres) {\n    return <div>Unknown genre</div>;\n  }\n\n  const listItems = genres.map((currentGenre: GenreType) => (\n    <li\n      key={currentGenre}\n      className={constructLiClassName(genre, currentGenre)}\n    >\n      <a className=\"catalog__genres-link\" onClick={handleChangeGenre} href='/'>\n        {currentGenre}\n      </a>\n    </li>\n  ));\n\n  return <ul className=\"catalog__genres-list\">{listItems}</ul>;\n}\n\nexport default CatalogGenresList;\n\n","import {MouseEventHandler} from 'react';\nimport classNames from 'classnames';\n\ntype ShowButtonPropsType = {\n  onClickHandler: MouseEventHandler<HTMLButtonElement>,\n  visibility: boolean\n}\n\nfunction ShowButton ({onClickHandler, visibility}: ShowButtonPropsType):JSX.Element {\n  return (\n    <div className=\"catalog__more\">\n      <button className={classNames('catalog__button', {'visually-hidden': !visibility})} type=\"button\" onClick={onClickHandler}>\n        Show more\n      </button>\n    </div>\n  );\n}\n\nexport default ShowButton;\n","const AUTH_TOKEN_KEY_NAME = 'wtw-token';\n\nexport type Token = string;\n\nexport const getToken = (): Token => {\n  const token = localStorage.getItem(AUTH_TOKEN_KEY_NAME);\n  return token ?? '';\n};\n\nexport const saveToken = (token: Token): void => {\n  localStorage.setItem(AUTH_TOKEN_KEY_NAME, token);\n};\n\nexport const dropToken = (): void => {\n  localStorage.removeItem(AUTH_TOKEN_KEY_NAME);\n};\n","import {CSSProperties} from 'react';\n\nconst SPINNER_STYLE: CSSProperties = {\n  position: 'absolute', top: '50%', left: '50%',\n};\n\nfunction LoadingScreen(): JSX.Element {\n\n  return (\n    <img src=\"img/spinner.gif\" alt=\"Spinner\" style={SPINNER_STYLE}/>\n  );\n}\n\nexport default LoadingScreen;\n","import {StateType} from '../../../types/state';\nimport {NameSpace} from '../../root-reducer';\nimport {AuthorizationStatus} from '../../../const';\n\nexport const getAuthStatus = (state: StateType): AuthorizationStatus => state[NameSpace.Auth].authorizationStatus;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { AppRoute, AuthorizationStatus } from '../../const';\nimport { useHistory } from 'react-router-dom';\nimport { getAuthStatus } from '../../store/reducers/auth-reducer/selectors';\nimport { getUserInfo } from '../../store/reducers/data-reducer/selectors';\nimport { logoutAction } from '../../store/api-actions';\n\nfunction UserBlock(): JSX.Element {\n  const authorizationStatus = useSelector(getAuthStatus);\n  const userInfo = useSelector(getUserInfo);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const handleLogOutClick = () => dispatch(logoutAction());\n  const handleAvatarClick = () => history.push(AppRoute.MyList);\n\n  return (\n    <ul className=\"user-block\">\n      {authorizationStatus === AuthorizationStatus.Auth && userInfo && (\n        <>\n          <li className=\"user-block__item\">\n            <div className=\"user-block__avatar\">\n              <img\n                src={userInfo.avatarUrl}\n                alt=\"User avatar\"\n                width=\"63\"\n                height=\"63\"\n                onClick={handleAvatarClick}\n              />\n            </div>\n          </li>\n          <li className=\"user-block__item\">\n            <p\n              className=\"user-block__link\"\n              onClick={handleLogOutClick}\n            >\n              Sign out\n            </p>\n          </li>\n        </>\n      )}\n      {authorizationStatus !== AuthorizationStatus.Auth && (\n        <li className=\"user-block__item\">\n          <a className=\"user-block__link\" href={AppRoute.SignIn}>\n            Sign in\n          </a>\n        </li>\n      )}\n    </ul>\n  );\n}\n\nexport default UserBlock;\n","import { ThunkActionResult } from '../types/action';\nimport {\n  APIRoute,\n  AppRoute,\n  AuthorizationStatus,\n  ToastMessage\n} from '../const';\nimport {\n  loadFavorites,\n  loadFilmComments,\n  loadFilms,\n  loadPromo,\n  loadSimilarFilms,\n  loadUserInfo,\n  redirectToRoute,\n  setAuthorizationStatus,\n  setGenres,\n  setIsFavoritesLoading,\n  setIsFilmsDataLoading,\n  setIsReviewPosting\n} from './action';\nimport { dropToken, saveToken, Token } from '../services/token';\nimport { AuthDataType } from '../types/auth-data-type';\nimport {\n  getGenres,\n  parseAuthInfoFromServerFormat,\n  parseFilmFromServerFormat\n} from '../utils/utils';\nimport {\n  FilmType,\n  PostCommentType,\n  ServerFilmType,\n  UserInfoType\n} from '../types/types';\nimport { generatePath } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { AxiosResponse } from 'axios';\n\nexport const fetchFilmsAction =\n  (): ThunkActionResult =>\n    async (dispatch, _getState, api): Promise<void> => {\n      try {\n        dispatch(setIsFilmsDataLoading(true));\n        const { data: serverFilmsData } = await api.get(APIRoute.Films);\n        const filmsData: FilmType[] = serverFilmsData.map(\n          (film: ServerFilmType) => parseFilmFromServerFormat(film),\n        );\n        dispatch(loadFilms(filmsData));\n        dispatch(setGenres(getGenres(filmsData)));\n        dispatch(setIsFilmsDataLoading(false));\n      } catch (error) {\n        dispatch(setIsFilmsDataLoading(false));\n        toast(ToastMessage.FetchFilmsError);\n      }\n    };\n\nexport const fetchFavorites =\n  (): ThunkActionResult =>\n    async (dispatch, _getState, api): Promise<void> => {\n      try {\n        dispatch(setIsFavoritesLoading(true));\n        const { data: serverFavorites } = await api.get(APIRoute.Favorites);\n        const favoritesData: FilmType[] = serverFavorites.map(\n          (film: ServerFilmType) => parseFilmFromServerFormat(film),\n        );\n        dispatch(loadFavorites(favoritesData));\n        dispatch(setIsFavoritesLoading(false));\n      } catch (error) {\n        dispatch(setIsFavoritesLoading(false));\n        toast(ToastMessage.FetchFavoritesErrorMessage);\n      }\n    };\n\nexport const fetchSimilarFilmsAction =\n  (similarFilmsPath: string): ThunkActionResult =>\n    async (dispatch, _getState, api): Promise<void> => {\n      try {\n        const { data: serverFilmsData } = await api.get(similarFilmsPath);\n        const filmsData = serverFilmsData.map((film: ServerFilmType) =>\n          parseFilmFromServerFormat(film),\n        );\n        dispatch(loadSimilarFilms(filmsData));\n      } catch (error) {\n        toast(ToastMessage.FetchSimilarErrorMessage);\n      }\n    };\n\nexport const fetchFilmCommentsAction =\n  (commentsPath: string): ThunkActionResult =>\n    async (dispatch, _getState, api): Promise<void> => {\n      try {\n        const { data: comments } = await api.get(commentsPath);\n        dispatch(loadFilmComments(comments));\n      } catch (error) {\n        toast(ToastMessage.FetchCommentsErrorMessage);\n      }\n    };\n\nexport const fetchPromoAction =\n  (): ThunkActionResult =>\n    async (dispatch, _getState, api): Promise<void> => {\n      const { data: serverPromoData } = await api.get(APIRoute.Promo);\n      const promoData = parseFilmFromServerFormat(serverPromoData);\n      dispatch(loadPromo(promoData));\n    };\n\nexport const checkAuthAction =\n  (): ThunkActionResult => async (dispatch, _getState, api) => {\n    try {\n      await api.get(APIRoute.Login).then(({ data: serverAuthInfo }) => {\n        const {\n          id: userId,\n          email: userEmail,\n          name: userName,\n          avatarUrl: userAvatarUrl,\n          token: userToken,\n        } = parseAuthInfoFromServerFormat(serverAuthInfo);\n        saveToken(userToken);\n        const userInfo: UserInfoType = {\n          id: userId,\n          email: userEmail,\n          name: userName,\n          avatarUrl: userAvatarUrl,\n        };\n        dispatch(setAuthorizationStatus(AuthorizationStatus.Auth));\n        dispatch(loadUserInfo(userInfo));\n      });\n    } catch (error) {\n      toast.info(ToastMessage.AuthSuggestion);\n    }\n  };\nexport const loginAction =\n  ({ login: email, password }: AuthDataType): ThunkActionResult =>\n    async (dispatch, _getState, api) => {\n      try {\n        const { data } = await api.post(APIRoute.Login, { email, password });\n        const {\n          id: userId,\n          email: userEmail,\n          name: userName,\n          avatarUrl: userAvatarUrl,\n          token: userToken,\n        } = parseAuthInfoFromServerFormat(data);\n        saveToken(userToken);\n        const userInfo: UserInfoType = {\n          id: userId,\n          email: userEmail,\n          name: userName,\n          avatarUrl: userAvatarUrl,\n        };\n        dispatch(loadUserInfo(userInfo));\n        dispatch(setAuthorizationStatus(AuthorizationStatus.Auth));\n        dispatch(redirectToRoute(AppRoute.Main));\n      } catch (error) {\n        toast.info(ToastMessage.PostLoginActionErrorMessage);\n      }\n    };\n\nexport const postReview =\n  ({ rating, comment }: PostCommentType, id: string): ThunkActionResult =>\n    async (dispatch, _getState, api) => {\n      const postCommentUrl = generatePath(APIRoute.PostComment, { id });\n      const filmUrl = generatePath(AppRoute.Film, { id });\n      dispatch(setIsReviewPosting(true));\n      try {\n        await api\n          .post<{ token: Token }>(postCommentUrl, {\n            rating,\n            comment,\n          })\n          .then(() => {\n            dispatch(redirectToRoute(filmUrl));\n            dispatch(setIsReviewPosting(false));\n          });\n      } catch (error) {\n        dispatch(setIsReviewPosting(false));\n        toast.info(ToastMessage.PostError);\n      }\n    };\n\nexport const logoutAction =\n  (): ThunkActionResult => async (dispatch, _getState, api) => {\n    await api.delete(APIRoute.Logout);\n    dropToken();\n    dispatch(setAuthorizationStatus(AuthorizationStatus.NoAuth));\n    dispatch(redirectToRoute(AppRoute.Main));\n  };\n\nexport const setFavoriteFlag =\n  (isFavoriteFlag: boolean, id: number): ThunkActionResult =>\n    async (dispatch, getState, api) => {\n      const status = isFavoriteFlag ? '1' : '0';\n      const postFavorite = generatePath(APIRoute.FavoriteStatus, {\n        'film_id': id,\n        status: status,\n      });\n      dispatch(setIsFavoritesLoading(true));\n      try {\n        const responce: AxiosResponse = await api.post<{ token: Token }>(\n          postFavorite,\n        );\n        if (responce.status === 200) {\n          const film = parseFilmFromServerFormat(responce.data);\n          const films = [...getState().DATA.films];\n          const updatedFilms = films.map((movie): FilmType => {\n            if (movie?.id === film?.id) {\n              return film;\n            }\n            return movie;\n          });\n          dispatch(loadFilms(updatedFilms));\n        }\n      } catch {\n        toast(ToastMessage.PostSetFavoriteErrorMessage);\n      } finally {\n        dispatch(setIsFavoritesLoading(false));\n      }\n    };\n","import UserBlock from '../user-block/user-block';\nimport {memo} from 'react';\n\nfunction MainHeader(): JSX.Element {\n  return (\n    <header className=\"page-header film-card__head\">\n      <div className=\"logo\">\n        <a className=\"logo__link\" href={'/'}>\n          <span className=\"logo__letter logo__letter--1\">W</span>\n          <span className=\"logo__letter logo__letter--2\">T</span>\n          <span className=\"logo__letter logo__letter--3\">W</span>\n        </a>\n      </div>\n\n      <UserBlock />\n    </header>\n  );\n}\n\nexport default memo(MainHeader);\n","import { generatePath } from 'react-router-dom';\nimport { AppRoute } from '../../const';\nimport { useDispatch } from 'react-redux';\nimport { redirectToRoute } from '../../store/action';\nimport {FilmType} from '../../types/types';\n\ntype PlayFilmPropsType = {\n  film: FilmType\n}\n\nfunction PlayFilm({film}: PlayFilmPropsType): JSX.Element {\n  const dispatch = useDispatch();\n\n  const handlePlayFilm = () => {\n    if (film) {\n      const playerRoute = generatePath(AppRoute.Player, { id: film.id });\n      dispatch(redirectToRoute(playerRoute));\n    }\n  };\n\n  return (\n    <button\n      className=\"btn btn--play film-card__button\"\n      type=\"button\"\n      onClick={handlePlayFilm}\n    >\n      <svg viewBox=\"0 0 19 19\" width=\"19\" height=\"19\">\n        <use xlinkHref=\"#play-s\" />\n      </svg>\n      <span>Play</span>\n    </button>\n  );\n}\n\nexport default PlayFilm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FilmType } from '../../types/types';\nimport { ThunkAppDispatch } from '../../types/action';\nimport { setFavoriteFlag } from '../../store/api-actions';\nimport { AppRoute, AuthorizationStatus } from '../../const';\nimport { redirectToRoute } from '../../store/action';\nimport { getAuthStatus } from '../../store/reducers/auth-reducer/selectors';\n\ntype AddMyListPropsType = {\n  film: FilmType;\n};\n\nfunction AddMyList(props: AddMyListPropsType): JSX.Element {\n  const { film } = props;\n  const authorizationStatus = useSelector(getAuthStatus);\n  const dispatch = useDispatch();\n\n  const handleMyListClick = () => {\n    if (authorizationStatus !== AuthorizationStatus.Auth) {\n      dispatch(redirectToRoute(AppRoute.SignIn));\n    }\n    if (film) {\n      (dispatch as ThunkAppDispatch)(\n        setFavoriteFlag(!film.isFavorite, film.id),\n      );\n    }\n  };\n\n  return (\n    <button\n      className=\"btn btn--list film-card__button\"\n      type=\"button\"\n      onClick={handleMyListClick}\n    >\n      <svg viewBox=\"0 0 19 20\" width=\"19\" height=\"20\">\n        {film?.isFavorite &&\n        authorizationStatus === AuthorizationStatus.Auth ? (\n            <use xlinkHref=\"#in-list\" />\n          ) : (\n            <use xlinkHref=\"#add\" />\n          )}\n      </svg>\n      <span>My list</span>\n    </button>\n  );\n}\n\nexport default AddMyList;\n","import PlayFilm from '../play-film/play-film';\nimport AddMyList from '../add-my-list/add-my-list';\nimport {memo} from 'react';\nimport Page404 from '../page-404/page-404';\nimport {FilmType} from '../../types/types';\n\ntype MainPromoPropsType = {\n  promo: FilmType;\n}\n\nfunction MainPromo({promo}: MainPromoPropsType): JSX.Element {\n  if (!promo) {\n    return <Page404 />;\n  }\n\n  return (\n    <div className=\"film-card__wrap\">\n      <div className=\"film-card__info\">\n        <div className=\"film-card__poster\">\n          <img\n            src={promo.posterImage}\n            alt={`${promo.name} poster`}\n            width=\"218\"\n            height=\"327\"\n          />\n        </div>\n\n        <div className=\"film-card__desc\">\n          <h2 className=\"film-card__title\">{promo.name}</h2>\n          <p className=\"film-card__meta\">\n            <span className=\"film-card__genre\">{promo.genre}</span>\n            <span className=\"film-card__year\">{promo.released}</span>\n          </p>\n\n          <div className=\"film-card__buttons\">\n            <PlayFilm film={promo}/>\n            <AddMyList film={promo}/>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(MainPromo);\n","import { useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CatalogFilmsList from '../catalog-films-list/catalog-films-list';\nimport Footer from '../footer/footer';\nimport CatalogGenresList from '../catalog-genres-list/catalog-genres-list';\nimport ShowButton from '../show-button/show-button';\nimport { ThunkAppDispatch } from '../../types/action';\nimport { fetchPromoAction } from '../../store/api-actions';\nimport LoadingScreen from '../loading-screen/loading-screen';\nimport MainHeader from './main-header';\nimport MainPromo from './main-promo';\nimport {\n  getFilms,\n  getFilmsByGenre,\n  getGenre,\n  getPromo\n} from '../../store/reducers/data-reducer/selectors';\n\nconst CHUNK_LENGTH = 8;\n\nfunction Main(): JSX.Element {\n\n\n  // eslint-disable-next-line no-console\n  console.log('MAI');\n\n  const genre = useSelector(getGenre);\n  const films = useSelector(getFilms);\n  const promoFilm = useSelector(getPromo);\n  const [listCount, setListCount] = useState(CHUNK_LENGTH);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    (dispatch as ThunkAppDispatch)(fetchPromoAction());\n  }, [dispatch, films]);\n\n  useEffect(() => {\n    setListCount(CHUNK_LENGTH);\n  }, [genre]);\n\n  const handleShowButtonClick = () => {\n    setListCount((count) => {\n      count += CHUNK_LENGTH;\n      return count;\n    });\n  };\n\n  const filmsList =  useSelector(getFilmsByGenre);\n\n  const isShowButtonVisible: boolean = useMemo(\n    () => filmsList.length > listCount,\n    [filmsList.length, listCount],\n  );\n\n  if (!promoFilm) {\n    return <LoadingScreen />;\n  }\n\n  return (\n    <>\n      <section className=\"film-card\">\n        <div className=\"film-card__bg\">\n          <img src={promoFilm.backgroundImage} alt=\"Film background\" />\n        </div>\n\n        <h1 className=\"visually-hidden\">WTW</h1>\n        <MainHeader />\n        <MainPromo promo={promoFilm} />\n      </section>\n      <div className=\"page-content\">\n        <section className=\"catalog\">\n          <h2 className=\"catalog__title visually-hidden\">Catalog</h2>\n          <CatalogGenresList />\n          <CatalogFilmsList films={filmsList.slice(0, listCount)} />\n          <ShowButton\n            onClickHandler={handleShowButtonClick}\n            visibility={isShowButtonVisible}\n          />\n        </section>\n        <Footer />\n      </div>\n    </>\n  );\n}\n\nexport default Main;\n","import { FormEvent, useRef } from 'react';\nimport { loginAction } from '../../store/api-actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppRoute, AuthorizationStatus } from '../../const';\nimport { redirectToRoute } from '../../store/action';\nimport { toast } from 'react-toastify';\nimport { getAuthStatus } from '../../store/reducers/auth-reducer/selectors';\n\nconst VALID_PASSWORD_REGEXP = /\\D\\d|\\d\\D/i;\nconst VALID_EMAIL_REGEXP = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/i;\n\nconst isValidPassword = (password: string): boolean =>\n  VALID_PASSWORD_REGEXP.test(password);\nconst isValidEmail = (email: string): boolean => VALID_EMAIL_REGEXP.test(email);\n\nfunction SignIn(): JSX.Element {\n  const authorizationStatus = useSelector(getAuthStatus);\n  const dispatch = useDispatch();\n\n  if (authorizationStatus === AuthorizationStatus.Auth) {\n    dispatch(redirectToRoute(AppRoute.Main));\n  }\n\n  const loginRef = useRef<HTMLInputElement | null>(null);\n  const passwordRef = useRef<HTMLInputElement | null>(null);\n\n  const handleSignInSubmit = (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    if (\n      loginRef.current &&\n      passwordRef.current &&\n      isValidPassword(passwordRef.current.value) &&\n      isValidEmail(loginRef.current.value)\n    ) {\n      dispatch(\n        loginAction({\n          login: loginRef.current.value,\n          password: passwordRef.current.value,\n        }),\n      );\n    }\n    if (loginRef.current && !isValidEmail(loginRef.current.value)) {\n      toast('В качестве логина используяте валидный адрес электронной почты');\n    }\n    if (passwordRef.current && !isValidPassword(passwordRef.current.value)) {\n      toast('Пароль должен содержать цифру и букву!');\n    }\n  };\n\n  return (\n    <div className=\"user-page\">\n      <header className=\"page-header user-page__head\">\n        <div className=\"logo\">\n          <a href={AppRoute.Main} className=\"logo__link\">\n            <span className=\"logo__letter logo__letter--1\">W</span>\n            <span className=\"logo__letter logo__letter--2\">T</span>\n            <span className=\"logo__letter logo__letter--3\">W</span>\n          </a>\n        </div>\n\n        <h1 className=\"page-title user-page__title\">Sign in</h1>\n      </header>\n\n      <div className=\"sign-in user-page__content\">\n        <form\n          action=\"#\"\n          className=\"sign-in__form\"\n          onSubmit={handleSignInSubmit}\n        >\n          <div className=\"sign-in__fields\">\n            <div className=\"sign-in__field\">\n              <input\n                className=\"sign-in__input\"\n                type=\"email\"\n                placeholder=\"Email address\"\n                name=\"user-email\"\n                id=\"user-email\"\n                ref={loginRef}\n              />\n              <label\n                className=\"sign-in__label visually-hidden\"\n                htmlFor=\"user-email\"\n              >\n                Email address\n              </label>\n            </div>\n            <div className=\"sign-in__field\">\n              <input\n                className=\"sign-in__input\"\n                type=\"password\"\n                placeholder=\"Password\"\n                autoComplete=\"off\"\n                name=\"user-password\"\n                id=\"user-password\"\n                ref={passwordRef}\n              />\n              <label\n                className=\"sign-in__label visually-hidden\"\n                htmlFor=\"user-password\"\n              >\n                Password\n              </label>\n            </div>\n          </div>\n          <div className=\"sign-in__submit\">\n            <button className=\"sign-in__btn\" type=\"submit\">\n              Sign in\n            </button>\n          </div>\n        </form>\n      </div>\n\n      <footer className=\"page-footer\">\n        <div className=\"logo\">\n          <a href=\"/\" className=\"logo__link logo__link--light\">\n            <span className=\"logo__letter logo__letter--1\">W</span>\n            <span className=\"logo__letter logo__letter--2\">T</span>\n            <span className=\"logo__letter logo__letter--3\">W</span>\n          </a>\n        </div>\n\n        <div className=\"copyright\">\n          <p>© 2019 What to watch Ltd.</p>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default SignIn;\n","import { Redirect, Route, RouteProps } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { AppRoute, AuthorizationStatus } from '../../const';\nimport { getAuthStatus } from '../../store/reducers/auth-reducer/selectors';\n\ntype PrivateRouteProps = RouteProps & {\n  render: () => JSX.Element;\n};\n\nfunction PrivateRoute({ exact, path, render }: PrivateRouteProps): JSX.Element {\n  const authorizationStatus = useSelector(getAuthStatus);\n  return (\n    <Route\n      exact={exact}\n      path={path}\n      render={() =>\n        authorizationStatus === AuthorizationStatus.Auth ? (\n          render()\n        ) : (\n          <Redirect to={AppRoute.SignIn} />\n        )}\n    />\n  );\n}\n\nexport default PrivateRoute;\n","import { StateType } from '../../../types/state';\nimport { NameSpace } from '../../root-reducer';\n\nexport const getIsFilmsDataLoading = (state: StateType): boolean =>\n  state[NameSpace.Status].isFilmsDataLoading;\nexport const getIsReviewPosting = (state: StateType): boolean =>\n  state[NameSpace.Status].isReviewPosting;\nexport const getIsFavoritesLoading = (state: StateType): boolean =>\n  state[NameSpace.Status].isFavoritesLoading;\n","import {ChangeEventHandler} from 'react';\n\ntype ReviewStarType = {\n  value: string;\n  handleReviewStarClick: ChangeEventHandler;\n  isReviewPosting: boolean;\n};\n\nfunction ReviewStar({\n  value,\n  handleReviewStarClick,\n  isReviewPosting,\n}: ReviewStarType): JSX.Element {\n  return (\n    <>\n      <input\n        className=\"rating__input\"\n        id={`star-${value}`}\n        type=\"radio\"\n        name=\"rating\"\n        value={value}\n        onChange={handleReviewStarClick}\n        disabled={isReviewPosting}\n      />\n      <label className=\"rating__label\" htmlFor={`star-${value}`}/>\n    </>\n  );\n}\n\nexport default ReviewStar;\n","import { ChangeEvent, FormEvent, useState } from 'react';\nimport { postReview } from '../../store/api-actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { getIsReviewPosting } from '../../store/reducers/status-reducer/selectors';\nimport ReviewStar from './review-star';\n\nconst ReviewConfig = {\n  maxRating: 10,\n  minRatingBound: 0,\n  minPostLength: 50,\n  maxPostLength: 400,\n} as const;\n\nconst DEFAULT_RATING = Array(ReviewConfig.maxRating)\n  .fill(null)\n  .map(() => false);\n\nfunction ReviewForm(): JSX.Element {\n  const isReviewPosting = useSelector(getIsReviewPosting);\n  const dispatch = useDispatch();\n  const [rating, setRating] = useState(DEFAULT_RATING);\n  const [review, setReview] = useState('');\n  const { id } = useParams<{ id: string }>();\n\n  const getRating = (): number =>\n    rating.findIndex((ratingElement) => ratingElement) + 1;\n\n  const isValidToPost = () =>\n    getRating() > ReviewConfig.minRatingBound &&\n    review.length >= ReviewConfig.minPostLength &&\n    review.length <= ReviewConfig.maxPostLength;\n\n  const handleReviewStarClick = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    const indexOfChecked = Number(target.value) - 1;\n    setRating(\n      rating.map((member, memberIndex) => memberIndex === indexOfChecked),\n    );\n  };\n  const handleReviewTextChange = ({\n    target,\n  }: ChangeEvent<HTMLTextAreaElement>) => {\n    setReview(target.value);\n  };\n\n  const handleFormSubmit = (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    const ratingValue = String(getRating());\n    dispatch(postReview({ comment: review, rating: ratingValue }, id));\n  };\n\n  const starsInputs = Array(ReviewConfig.maxRating)\n    .fill(null)\n    .map((_, index) => {\n      const inputValue = (ReviewConfig.maxRating - index).toString();\n      return (\n        <ReviewStar\n          isReviewPosting={isReviewPosting}\n          handleReviewStarClick={handleReviewStarClick}\n          value={inputValue}\n          key={inputValue}\n        />\n      );\n    });\n\n  return (\n    <form className=\"add-review__form\" onSubmit={handleFormSubmit}>\n      <div className=\"rating\">\n        <div className=\"rating__stars\">{starsInputs}</div>\n      </div>\n\n      <div className=\"add-review__text\">\n        <textarea\n          className=\"add-review__textarea\"\n          name=\"review-text\"\n          id=\"review-text\"\n          placeholder=\"Review text\"\n          onChange={handleReviewTextChange}\n          disabled={isReviewPosting}\n        />\n        <div className=\"add-review__submit\">\n          <button\n            className=\"add-review__btn\"\n            type=\"submit\"\n            disabled={isReviewPosting || !isValidToPost()}\n          >\n            Post\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default ReviewForm;\n","import { useSelector } from 'react-redux';\nimport { generatePath, Link, useLocation, useParams } from 'react-router-dom';\nimport ReviewForm from '../review-form/review-form';\nimport Page404 from '../page-404/page-404';\nimport UserBlock from '../user-block/user-block';\nimport { getFilms } from '../../store/reducers/data-reducer/selectors';\nimport {AppRoute} from '../../const';\n\nfunction Review(): JSX.Element {\n  const films = useSelector(getFilms);\n\n  const { id } = useParams<{ id?: string }>();\n\n  const film = films.find((movie) => movie?.id === Number(id));\n  const location = useLocation();\n\n  if (!film) {\n    return <Page404 />;\n  }\n  const filmPath = generatePath(AppRoute.Film, { id: film.id });\n\n  return (\n    <section className=\"film-card film-card--full\">\n      <div className=\"film-card__header\">\n        <div className=\"film-card__bg\">\n          <img src={film.backgroundImage} alt={film.name} />\n        </div>\n\n        <h1 className=\"visually-hidden\">WTW</h1>\n\n        <header className=\"page-header\">\n          <div className=\"logo\">\n            <a href=\"/\" className=\"logo__link\">\n              <span className=\"logo__letter logo__letter--1\">W</span>\n              <span className=\"logo__letter logo__letter--2\">T</span>\n              <span className=\"logo__letter logo__letter--3\">W</span>\n            </a>\n          </div>\n\n          <nav className=\"breadcrumbs\">\n            <ul className=\"breadcrumbs__list\">\n              <li className=\"breadcrumbs__item\">\n                <Link to={filmPath} className={'breadcrumbs__link'}>{film.name}</Link>\n              </li>\n              <li className=\"breadcrumbs__item\">\n                <Link className=\"breadcrumbs__link\" to={location.pathname}>Add review</Link>\n              </li>\n            </ul>\n          </nav>\n\n          <UserBlock />\n        </header>\n\n        <div className=\"film-card__poster film-card__poster--small\">\n          <img\n            src={film.posterImage}\n            alt={film.name}\n            width=\"218\"\n            height=\"327\"\n          />\n        </div>\n      </div>\n\n      <div className=\"add-review\">\n        <ReviewForm />\n      </div>\n    </section>\n  );\n}\n\nexport default Review;\n\n","import CatalogFilmsList from '../catalog-films-list/catalog-films-list';\nimport { useDispatch, useSelector } from 'react-redux';\nimport UserBlock from '../user-block/user-block';\nimport { useEffect } from 'react';\nimport { ThunkAppDispatch } from '../../types/action';\nimport { fetchFavorites } from '../../store/api-actions';\nimport LoadingScreen from '../loading-screen/loading-screen';\nimport { getFavorites } from '../../store/reducers/data-reducer/selectors';\nimport { getIsFavoritesLoading } from '../../store/reducers/status-reducer/selectors';\n\nfunction MyList(): JSX.Element {\n  const favorites = useSelector(getFavorites);\n  const isFavoritesLoading = useSelector(getIsFavoritesLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    (dispatch as ThunkAppDispatch)(fetchFavorites());\n  }, [dispatch]);\n\n  if (isFavoritesLoading) {\n    return <LoadingScreen />;\n  }\n\n  return (\n    <div className=\"user-page\">\n      <header className=\"page-header user-page__head\">\n        <div className=\"logo\">\n          <a href=\"/\" className=\"logo__link\">\n            <span className=\"logo__letter logo__letter--1\">W</span>\n            <span className=\"logo__letter logo__letter--2\">T</span>\n            <span className=\"logo__letter logo__letter--3\">W</span>\n          </a>\n        </div>\n\n        <h1 className=\"page-title user-page__title\">My list</h1>\n\n        <UserBlock />\n      </header>\n\n      <section className=\"catalog\">\n        <h2 className=\"catalog__title visually-hidden\">Catalog</h2>\n        <CatalogFilmsList films={favorites} />\n      </section>\n\n      <footer className=\"page-footer\">\n        <div className=\"logo\">\n          <a href=\"/\" className=\"logo__link logo__link--light\">\n            <span className=\"logo__letter logo__letter--1\">W</span>\n            <span className=\"logo__letter logo__letter--2\">T</span>\n            <span className=\"logo__letter logo__letter--3\">W</span>\n          </a>\n        </div>\n\n        <div className=\"copyright\">\n          <p>© 2019 What to watch Ltd.</p>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default MyList;\n\n","import { useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Page404 from '../page-404/page-404';\nimport { useEffect, useRef, useState } from 'react';\nimport LoadingScreen from '../loading-screen/loading-screen';\nimport { formatRemainingTime } from '../../utils/utils';\nimport { getFilms } from '../../store/reducers/data-reducer/selectors';\n\nfunction Player(): JSX.Element {\n  const films = useSelector(getFilms);\n  const { id } = useParams<{ id?: string }>();\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const { current: videoElement } = videoRef;\n  const progressBarRef = useRef<HTMLProgressElement>(null);\n  const { current: progressBarElement } = progressBarRef;\n  const [isPlaying, setIsPlaying] = useState(true);\n  const [isVideoLoading, setIsVideoLoading] = useState(true);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [{ duration, remainingTime }, setDuration] = useState({\n    duration: 0,\n    remainingTime: 0,\n  });\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!videoElement) {\n      return;\n    }\n    isPlaying ? videoElement.play() : videoElement.pause();\n  }, [isPlaying, videoElement]);\n\n  useEffect(() => {\n    if (!videoElement) {\n      return;\n    }\n\n    const videoDuration = Math.round(videoElement.duration);\n\n    setDuration((state) => ({\n      ...state,\n      duration: videoDuration,\n      remainingTime: videoDuration,\n    }));\n  }, [isVideoLoading, videoElement]);\n\n  if (id === undefined) {\n    return <Page404 />;\n  }\n\n  const RemainingMovieTime = !isVideoLoading\n    ? formatRemainingTime(remainingTime)\n    : '';\n\n  const handlePlayClick = () => {\n    setIsPlaying((prevState) => !prevState);\n  };\n  const handleVideoLoaded = () => {\n    setIsVideoLoading(false);\n  };\n  const handlePlaybackPosition = () => {\n    if (!videoElement || !progressBarElement) {\n      return;\n    }\n\n    const currentVideoTime = videoElement.currentTime;\n    const currentPercentage = (currentVideoTime / duration) * 100;\n    const currentRemainingTime = Math.round(\n      (duration * (100 - currentPercentage)) / 100,\n    );\n\n    setDuration((state) => ({\n      duration: state.duration,\n      remainingTime: currentRemainingTime,\n    }));\n    setCurrentTime(currentPercentage);\n    progressBarElement.value = currentVideoTime;\n  };\n\n  const film = films.find((movie) => movie?.id === Number(id));\n\n  if (!film) {\n    return <Page404 />;\n  }\n\n  const handleFullscreenClick = () => {\n    if (videoElement) {\n      videoElement.requestFullscreen();\n    }\n  };\n\n  const handleExitClick = () => history.go(-1);\n\n  return (\n    <div className=\"player\">\n      {isVideoLoading && <LoadingScreen />}\n      <video\n        src={film.videoLink}\n        className=\"player__video\"\n        poster={film.posterImage}\n        ref={videoRef}\n        onLoadedData={handleVideoLoaded}\n        onTimeUpdate={handlePlaybackPosition}\n      />\n\n      <button type=\"button\" className=\"player__exit\" onClick={handleExitClick}>\n        Exit\n      </button>\n\n      <div className=\"player__controls\">\n        <div className=\"player__controls-row\">\n          <div className=\"player__time\">\n            <progress\n              className=\"player__progress\"\n              max={duration}\n              ref={progressBarRef}\n            />\n            <div\n              className=\"player__toggler\"\n              style={{ left: `${currentTime}%` }}\n            >\n              Toggler\n            </div>\n          </div>\n          <div className=\"player__time-value\">{RemainingMovieTime}</div>\n        </div>\n\n        <div className=\"player__controls-row\">\n          <button\n            type=\"button\"\n            className=\"player__play\"\n            onClick={handlePlayClick}\n          >\n            {isPlaying ? (\n              <>\n                <svg viewBox=\"0 0 14 21\" width=\"14\" height=\"21\">\n                  <use xlinkHref=\"#pause\" />\n                </svg>\n                <span>Pause</span>\n              </>\n            ) : (\n              <>\n                <svg viewBox=\"0 0 19 19\" width=\"19\" height=\"19\">\n                  <use xlinkHref=\"#play-s\" />\n                </svg>\n                <span>Play</span>\n              </>\n            )}\n            <span>Play</span>\n          </button>\n          <div className=\"player__name\">{film.name}</div>\n\n          <button\n            type=\"button\"\n            className=\"player__full-screen\"\n            onClick={handleFullscreenClick}\n          >\n            <svg viewBox=\"0 0 27 27\" width=\"27\" height=\"27\">\n              <use xlinkHref=\"#full-screen\" />\n            </svg>\n            <span>Full screen</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Player;\n","import {FilmType} from '../../types/types';\nimport {rangeFilm} from '../../utils/utils';\nimport Page404 from '../page-404/page-404';\n\ntype OverviewTabProps = {\n  film: FilmType\n}\n\nfunction OverviewTab (props: OverviewTabProps):JSX.Element {\n  const {film} = props;\n\n  if (!film) {\n    return <Page404 />;\n  }\n  const starring = `${film.starring.join(', ')}.`;\n\n  return (\n    <>\n      <div className=\"film-rating\">\n        <div className=\"film-rating__score\">{film.rating}</div>\n        <p className=\"film-rating__meta\">\n          <span className=\"film-rating__level\">{rangeFilm(film.rating)}</span>\n          <span className=\"film-rating__count\">{film.scoresCount} ratings</span>\n        </p>\n      </div>\n\n      <div className=\"film-card__text\">\n        <p>\n          {film.description}I\n        </p>\n\n        <p className=\"film-card__director\"><strong>Director: {film.director}</strong></p>\n\n        <p className=\"film-card__starring\">\n          <strong>Starring: {starring}</strong>\n        </p>\n      </div>\n    </>\n  );\n}\n\nexport default OverviewTab;\n","import {\n  convertMinutesToHoursWithMinutes,\n  joinArrayByComma\n} from '../../utils/utils';\nimport { FilmType } from '../../types/types';\nimport { CSSProperties } from 'react';\nimport Page404 from '../page-404/page-404';\n\ntype DetailsTabProps = {\n  film: FilmType;\n};\n\nconst STARRING_STYLE: CSSProperties = { whiteSpace: 'pre-line' };\n\nfunction DetailsTab(prop: DetailsTabProps): JSX.Element {\n  const { film } = prop;\n\n  if (!film) {\n    return <Page404 />;\n  }\n  const starring = joinArrayByComma(film.starring);\n\n  return (\n    <div className=\"film-card__text film-card__row\">\n      <div className=\"film-card__text-col\">\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Director</strong>\n          <span className=\"film-card__details-value\">{film.director}</span>\n        </p>\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Starring</strong>\n          <span className=\"film-card__details-value\" style={STARRING_STYLE}>\n            {starring}\n          </span>\n        </p>\n      </div>\n\n      <div className=\"film-card__text-col\">\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Run Time</strong>\n          <span className=\"film-card__details-value\">\n            {convertMinutesToHoursWithMinutes(film.runTime)}\n          </span>\n        </p>\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Genre</strong>\n          <span className=\"film-card__details-value\">{film.genre}</span>\n        </p>\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Released</strong>\n          <span className=\"film-card__details-value\">{film.released}</span>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default DetailsTab;\n","import { CommentType } from '../../types/types';\nimport { formatCommentDate } from '../../utils/utils';\nimport { CSSProperties } from 'react';\n\ntype CommentProps = { comment: CommentType };\n\nconst REVIEW_TEXT_STYLE: CSSProperties = {\n  wordBreak: 'break-all',\n};\n\nfunction Comment(props: CommentProps): JSX.Element {\n  const { comment } = props;\n  const commentDate = new Date(comment.date);\n\n  return (\n    <div className=\"review\">\n      <blockquote className=\"review__quote\">\n        <p className=\"review__text\" style={REVIEW_TEXT_STYLE}>\n          {comment.comment}\n        </p>\n\n        <footer className=\"review__details\">\n          <cite className=\"review__author\">{comment.user.name}</cite>\n          <time className=\"review__date\" dateTime={commentDate.toISOString()}>\n            {formatCommentDate(commentDate)}\n          </time>\n        </footer>\n      </blockquote>\n\n      <div className=\"review__rating\">{comment.rating}</div>\n    </div>\n  );\n}\n\nexport default Comment;\n","import Comment from '../comment/comment';\nimport {CommentType} from '../../types/types';\n\ntype ReviewsTabProps = {\n  comments: CommentType[]\n}\n\nconst FILM_CARD_REVIEWS_STYLE = {\n  paddingTop: '20px',\n  display: 'grid',\n  gridTemplateColumns: '1fr 1fr',\n  gridAutoColumns: 'minmax(0, 380px)',\n  columnGap: '60px',\n\n};\n\nfunction ReviewsTab(props: ReviewsTabProps): JSX.Element {\n  const {comments} = props;\n\n  return (\n    <div className=\"film-card__reviews film-card__row\" style={FILM_CARD_REVIEWS_STYLE}>\n      {comments.map((comment) => (<Comment key={comment.id} comment = {comment}/>))}\n    </div>\n  );\n}\n\nexport default ReviewsTab;\n","import { generatePath, Link, Route, Switch } from 'react-router-dom';\nimport { AppRoute } from '../../const';\nimport OverviewTab from '../overview-tab/overview-tab';\nimport DetailsTab from '../details-tab/details-tab';\nimport ReviewsTab from '../reviews-tab/reviews-tab';\nimport { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { CommentType, FilmType } from '../../types/types';\nimport Page404 from '../page-404/page-404';\n\nenum Tab {\n  Overview,\n  Details,\n  Reviews,\n}\n\ntype FilmCardTabsProps = {\n  film: FilmType;\n  comments: CommentType[];\n};\n\nfunction FilmCardTabs({ film, comments }: FilmCardTabsProps): JSX.Element {\n  const [activeTab, setActiveTab] = useState(Tab.Overview);\n\n  useEffect(() => setActiveTab(Tab.Overview), []);\n\n  if (film === null) {\n    return <Page404 />;\n  }\n\n  const overviewNavLinkClass = classNames('film-nav__item', {\n    'film-nav__item--active': activeTab === Tab.Overview,\n  });\n  const detailsNavLinkClass = classNames('film-nav__item', {\n    'film-nav__item--active': activeTab === Tab.Details,\n  });\n  const reviewsNavLinkClass = classNames('film-nav__item', {\n    'film-nav__item--active': activeTab === Tab.Reviews,\n  });\n\n  const handleOverviewNavLinkClick = () => setActiveTab(Tab.Overview);\n  const handleDetailsNavLinkClick = () => setActiveTab(Tab.Details);\n  const handleReviewsNavLinkClick = () => setActiveTab(Tab.Reviews);\n\n  return (\n    <div className=\"film-card__desc\">\n      <nav className=\"film-nav film-card__nav\">\n        <ul className=\"film-nav__list\">\n          <li className={overviewNavLinkClass}>\n            <Link\n              to={generatePath(AppRoute.Overview, { id: film.id })}\n              className=\"film-nav__link\"\n              onClick={handleOverviewNavLinkClick}\n            >\n              Overview\n            </Link>\n          </li>\n          <li className={detailsNavLinkClass}>\n            <Link\n              to={generatePath(AppRoute.Details, { id: film.id })}\n              className=\"film-nav__link\"\n              onClick={handleDetailsNavLinkClick}\n            >\n              Details\n            </Link>\n          </li>\n          <li className={reviewsNavLinkClass}>\n            <Link\n              to={generatePath(AppRoute.Reviews, { id: film.id })}\n              className=\"film-nav__link\"\n              onClick={handleReviewsNavLinkClick}\n            >\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </nav>\n\n      <Switch>\n        <Route\n          exact\n          path={[AppRoute.Overview, AppRoute.Film]}\n          render={() => <OverviewTab film={film} />}\n        />\n        <Route\n          exact\n          path={AppRoute.Details}\n          render={() => <DetailsTab film={film} />}\n        />\n        <Route\n          exact\n          path={AppRoute.Reviews}\n          render={() => <ReviewsTab comments={comments} />}\n        />\n      </Switch>\n    </div>\n  );\n}\n\nexport default FilmCardTabs;\n","import PlayFilm from '../play-film/play-film';\nimport AddMyList from '../add-my-list/add-my-list';\nimport { generatePath, Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { AppRoute, AuthorizationStatus } from '../../const';\nimport { useSelector } from 'react-redux';\nimport { getAuthStatus } from '../../store/reducers/auth-reducer/selectors';\nimport Page404 from '../page-404/page-404';\nimport { FilmType } from '../../types/types';\n\ntype FilmCardPropsType = {\n  film: FilmType;\n};\n\nfunction FilmCard({ film }: FilmCardPropsType): JSX.Element {\n  const authorizationStatus = useSelector(getAuthStatus);\n\n  if (film === null) {\n    return <Page404 />;\n  }\n  const addReviewPath = generatePath(AppRoute.AddReview, { id: film.id });\n\n  return (\n    <div className=\"film-card__wrap\">\n      <div className=\"film-card__desc\">\n        <h2 className=\"film-card__title\">{film.name}</h2>\n        <p className=\"film-card__meta\">\n          <span className=\"film-card__genre\">{film.genre}</span>\n          <span className=\"film-card__year\">{film.released}</span>\n        </p>\n\n        <div className=\"film-card__buttons\">\n          <PlayFilm film={film} />\n          <AddMyList film={film} />\n          <Link\n            to={addReviewPath}\n            className={classNames('btn film-card__button', {\n              'visually-hidden':\n                authorizationStatus !== AuthorizationStatus.Auth,\n            })}\n          >\n            Add review\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FilmCard;\n","import { generatePath, Link, useParams, useRouteMatch } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Footer from '../footer/footer';\nimport { AppRoute } from '../../const';\nimport FilmCardTabs from '../film-card-tabs/film-card-tabs';\nimport CatalogFilmsList from '../catalog-films-list/catalog-films-list';\nimport Page404 from '../page-404/page-404';\nimport {useEffect} from 'react';\nimport {\n  fetchFilmCommentsAction,\n  fetchSimilarFilmsAction\n} from '../../store/api-actions';\nimport { ThunkAppDispatch } from '../../types/action';\nimport UserBlock from '../user-block/user-block';\nimport FilmCard from './film-card';\nimport {\n  getComments,\n  getFilms,\n  getSimilarFilms\n} from '../../store/reducers/data-reducer/selectors';\n\nconst SIMILAR_NUMBER = 4;\n\nfunction Film(): JSX.Element {\n  const films = useSelector(getFilms);\n  const comments = useSelector(getComments);\n  const similarFilms = useSelector(getSimilarFilms);\n  const { url } = useRouteMatch();\n  const { id }: { id: string } = useParams();\n  const dispatch = useDispatch();\n\n  const film = films.find((movie) => movie?.id === Number(id));\n\n  const similarFilmsPath = generatePath(AppRoute.Similar, { id: id });\n  const commentsPath = generatePath(AppRoute.Comments, { id: id });\n\n  useEffect(() => {\n    (dispatch as ThunkAppDispatch)(fetchSimilarFilmsAction(similarFilmsPath));\n    (dispatch as ThunkAppDispatch)(fetchFilmCommentsAction(commentsPath));\n  }, [url, commentsPath, dispatch, similarFilmsPath, film]);\n\n  if (!film) {\n    return <Page404 />;\n  }\n\n  const FILM_CARD_INLINE_STYLE = {\n    backgroundColor: film.backgroundColor,\n  };\n\n  return (\n    <>\n      <section\n        className=\"film-card film-card--full\"\n        style={FILM_CARD_INLINE_STYLE}\n      >\n        <div className=\"film-card__hero\">\n          <div className=\"film-card__bg\">\n            <img src={film.backgroundImage} alt={film.name} />\n          </div>\n\n          <h1 className=\"visually-hidden\">WTW</h1>\n\n          <header className=\"page-header film-card__head\">\n            <div className=\"logo\">\n              <Link to={AppRoute.Main} className=\"logo__link\">\n                <span className=\"logo__letter logo__letter--1\">W</span>\n                <span className=\"logo__letter logo__letter--2\">T</span>\n                <span className=\"logo__letter logo__letter--3\">W</span>\n              </Link>\n            </div>\n\n            <UserBlock />\n          </header>\n\n          <FilmCard film={film}/>\n        </div>\n\n        <div className=\"film-card__wrap film-card__translate-top\">\n          <div className=\"film-card__info\">\n            <div className=\"film-card__poster film-card__poster--big\">\n              <img\n                src={film.posterImage}\n                alt={film.name}\n                width=\"218\"\n                height=\"327\"\n              />\n            </div>\n            <FilmCardTabs film={film} comments={comments} />\n          </div>\n        </div>\n      </section>\n      <div className=\"page-content\">\n        <section className=\"catalog catalog--like-this\">\n          <h2 className=\"catalog__title\">More like this</h2>\n          <CatalogFilmsList films={similarFilms.slice(0, SIMILAR_NUMBER)} />\n        </section>\n        <Footer />\n      </div>\n    </>\n  );\n}\n\nexport default Film;\n\n","import {createBrowserHistory} from 'history';\n\nconst browserHistory = createBrowserHistory();\n\nexport default browserHistory;\n","import { Route, Router as BrowserRouter, Switch } from 'react-router-dom';\nimport {useSelector} from 'react-redux';\n\nimport Main from '../main/main';\nimport { AppRoute } from '../../const';\nimport SignIn from '../sign-in/sign-in';\nimport Page404 from '../page-404/page-404';\nimport PrivateRoute from '../private-route/private-route';\nimport LoadingScreen from '../loading-screen/loading-screen';\nimport Review from '../review/review';\nimport MyList from '../my-list/my-list';\nimport Player from '../player/player';\nimport Film from '../film/film';\nimport browserHistory from '../../browser-history';\nimport {getIsFilmsDataLoading} from '../../store/reducers/status-reducer/selectors';\n\nfunction App(): JSX.Element {\n  const isFilmsDataLoading = useSelector(getIsFilmsDataLoading);\n\n  if (isFilmsDataLoading) {\n    return <LoadingScreen />;\n  }\n\n  return (\n    <BrowserRouter history={browserHistory}>\n      <Switch>\n        <Route exact path={AppRoute.Main}>\n          <Main />\n        </Route>\n        <Route exact path={AppRoute.SignIn} render={() => <SignIn />} />\n        <PrivateRoute\n          exact\n          path={AppRoute.AddReview}\n          render={() => <Review />}\n        />\n        <Route exact path={AppRoute.Page404} render={() => <Page404 />} />\n        <Route path={AppRoute.Film} render={() => <Film />} />\n        <PrivateRoute exact path={AppRoute.MyList} render={() => <MyList />} />\n        <Route exact path={AppRoute.Player} render={() => <Player />} />\n        <PrivateRoute\n          exact\n          path={AppRoute.Favorites}\n          render={() => <MyList />}\n        />\n        <Route render={() => <Page404 />} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import axios, {\n  AxiosError,\n  AxiosInstance,\n  AxiosRequestConfig,\n  AxiosResponse\n} from 'axios';\nimport { getToken } from './token';\n\nconst BACKEND_URL = 'https://8.react.pages.academy/wtw';\nconst REQUEST_TIMEOUT = 5000;\n\nenum HttpCode {\n  Unauthorized = 401,\n}\n\ntype UnauthorizedCallback = () => void;\n\nexport const createAPI = (\n  onUnauthorized: UnauthorizedCallback,\n): AxiosInstance => {\n  const api = axios.create({\n    baseURL: BACKEND_URL,\n    timeout: REQUEST_TIMEOUT,\n  });\n\n  api.interceptors.response.use(\n    (response: AxiosResponse) => response,\n\n    (error: AxiosError) => {\n      const { response } = error;\n\n      if (response?.status === HttpCode.Unauthorized) {\n        onUnauthorized();\n      }\n\n      return Promise.reject(error);\n    },\n  );\n\n  api.interceptors.request.use((config: AxiosRequestConfig) => {\n    const token = getToken();\n\n    if (token) {\n      config.headers['x-token'] = token;\n    }\n\n    return config;\n  },\n  (error: AxiosError) => Promise.reject(error),\n  );\n\n  return api;\n};\n\n","import browserHistory from '../../browser-history';\nimport { Middleware } from 'redux';\nimport { StateType } from '../../types/state';\nimport {Action} from '../../const';\n\nexport const redirect: Middleware<unknown, StateType> =\n  (_store) => (next) => (action) => {\n    if (action.type === Action.RedirectToRoute) {\n      browserHistory.push(action.payload);\n    }\n\n    return next(action);\n  };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\n\nimport { configureStore } from '@reduxjs/toolkit';\nimport { Provider } from 'react-redux';\nimport { createAPI } from './services/api';\nimport { setAuthorizationStatus } from './store/action';\nimport { AuthorizationStatus } from './const';\nimport { ThunkAppDispatch } from './types/action';\nimport {\n  checkAuthAction,\n  fetchFilmsAction\n} from './store/api-actions';\nimport { redirect } from './store/middlewares/redirect';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {rootReducer} from './store/root-reducer';\n\nconst api = createAPI(() => {\n  store.dispatch(setAuthorizationStatus(AuthorizationStatus.NoAuth));\n});\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      thunk: {\n        extraArgument: api,\n      },\n    }).concat(redirect),\n});\n\n(store.dispatch as ThunkAppDispatch)(checkAuthAction());\n(store.dispatch as ThunkAppDispatch)(fetchFilmsAction());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ToastContainer />\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n\n"],"sourceRoot":""}